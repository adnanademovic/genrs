@###############################################
@#
@# ROS service source code generation for Rust
@#
@# EmPy template for generating <msg>.rs files
@#
@###############################################
@# Start of Template
@#
@# Context:
@#  - file_name_in (String) Source .srv file
@#  - spec (msggen.SrvSpec) Parsed specification of the .srv file
@#  - md5sum (String) MD5Sum of the .srv specification
@###############################################
@{
import genmsg.msgs
import genrs
}@
// @(spec.package) @(spec.short_name)Request
// @(spec.package) @(spec.short_name)Response

// Generated by genrs from file @(spec.package)/@(spec.short_name).srv
// DO NOT EDIT!

@##############################
@# Definition of fields
@##############################

#[allow(dead_code,non_camel_case_types)]
#[derive(Clone,Debug,RustcEncodable,RustcDecodable)]
pub struct @(spec.short_name) {}

@##############################
@# Definition of methods
@##############################

impl ::rosrust::Message for @(spec.short_name) {
@[for trait_class,trait_value in [
    ['md5sum', md5sum],
    ['msg_type', spec.full_name],
    ['msg_definition', '']
]]@
    fn @(trait_class)() -> ::std::string::String {
        "@(trait_value)".into()
    }
@[end for]
}

impl ::rosrust::Service for @(spec.short_name) {
    type Request = @(spec.short_name)Request;
    type Response = @(spec.short_name)Response;
}
