@###############################################
@#
@# ROS message source code generation for Rust
@#
@# EmPy template for generating <msg>.rs files
@#
@###############################################
@# Start of Template
@#
@# Context:
@#  - file_name_in (String) Source file
@#  - spec (msggen.MsgSpec) Parsed specification of the .msg file
@#  - md5sum (String) MD5Sum of the .msg specification
@###############################################
@{
import genmsg.msgs
import genrs
}@
@[for package in genrs.depending_on(spec)]// @(package)
@[end for]

// Generated by genrs from file @(spec.package)/@(spec.short_name).msg
// DO NOT EDIT!

@##############################
@# Definition of fields
@##############################

#[derive(Clone,Debug,RustcEncodable,RustcDecodable)]
pub struct @(spec.short_name) {@[for field in spec.parsed_fields()]
    pub @(field.name): @(genrs.msg_type_to_rs(field.type, spec.package)),@[end for]
}

@##############################
@# Definition of constructor
@##############################

impl @(spec.short_name) {
    pub fn new() -> @(spec.short_name) {
        @(spec.short_name) {@[for field in spec.parsed_fields()]
            @(field.name): @(genrs.default_value(field.type, spec.package)),@[end for]
        }
    }
}

@##############################
@# Definition of methods
@##############################

impl rosrust::Message for @(spec.short_name) {
@[for trait_class,trait_value in [
    ['md5sum', md5sum],
    ['msg_type', spec.full_name],
    ['msg_definition', genrs.escape_message_definition(msg_definition)]
]]@
    fn @(trait_class)() -> std::string::String {
        "@(trait_value)".into()
    }
@[end for]
}
